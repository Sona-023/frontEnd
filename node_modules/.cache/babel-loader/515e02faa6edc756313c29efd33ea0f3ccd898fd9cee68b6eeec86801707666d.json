{"ast":null,"code":"import _objectSpread from\"C:/Users/Sona_M/OneDrive/Desktop/MediChatbot/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{create}from'zustand';export const useChatStore=create((set,get)=>({messages:[{id:'1',text:'Hello! I\\'m your medical assistant. How can I help you today?',sender:'bot',timestamp:new Date(),type:'text'}],isBotTyping:false,addMessage:message=>{const newMessage=_objectSpread(_objectSpread({},message),{},{id:Date.now().toString(),timestamp:new Date()});set(state=>({messages:[...state.messages,newMessage]}));},setBotTyping:isTyping=>{set({isBotTyping:isTyping});},clearMessages:()=>{set({messages:[]});},addBotResponse:text=>{const botMessage={id:Date.now().toString(),text,sender:'bot',timestamp:new Date(),type:'text'};set(state=>({messages:[...state.messages,botMessage],isBotTyping:false}));}}));","map":{"version":3,"names":["create","useChatStore","set","get","messages","id","text","sender","timestamp","Date","type","isBotTyping","addMessage","message","newMessage","_objectSpread","now","toString","state","setBotTyping","isTyping","clearMessages","addBotResponse","botMessage"],"sources":["C:/Users/Sona_M/OneDrive/Desktop/MediChatbot/src/store/chatStore.ts"],"sourcesContent":["import { create } from 'zustand';\r\n\r\nexport interface Message {\r\n  id: string;\r\n  text: string;\r\n  sender: 'user' | 'bot';\r\n  timestamp: Date;\r\n  type: 'text' | 'audio';\r\n  audioUrl?: string;\r\n  isTyping?: boolean;\r\n}\r\n\r\ninterface ChatState {\r\n  messages: Message[];\r\n  isBotTyping: boolean;\r\n  addMessage: (message: Omit<Message, 'id' | 'timestamp'>) => void;\r\n  setBotTyping: (isTyping: boolean) => void;\r\n  clearMessages: () => void;\r\n  addBotResponse: (text: string) => void;\r\n}\r\n\r\nexport const useChatStore = create<ChatState>((set, get) => ({\r\n  messages: [\r\n    {\r\n      id: '1',\r\n      text: 'Hello! I\\'m your medical assistant. How can I help you today?',\r\n      sender: 'bot',\r\n      timestamp: new Date(),\r\n      type: 'text'\r\n    }\r\n  ],\r\n  isBotTyping: false,\r\n  \r\n  addMessage: (message) => {\r\n    const newMessage: Message = {\r\n      ...message,\r\n      id: Date.now().toString(),\r\n      timestamp: new Date()\r\n    };\r\n    \r\n    set((state) => ({\r\n      messages: [...state.messages, newMessage]\r\n    }));\r\n  },\r\n  \r\n  setBotTyping: (isTyping) => {\r\n    set({ isBotTyping: isTyping });\r\n  },\r\n  \r\n  clearMessages: () => {\r\n    set({ messages: [] });\r\n  },\r\n  \r\n  addBotResponse: (text: string) => {\r\n    const botMessage: Message = {\r\n      id: Date.now().toString(),\r\n      text,\r\n      sender: 'bot',\r\n      timestamp: new Date(),\r\n      type: 'text'\r\n    };\r\n    \r\n    set((state) => ({\r\n      messages: [...state.messages, botMessage],\r\n      isBotTyping: false\r\n    }));\r\n  }\r\n}));\r\n\r\n\r\n"],"mappings":"iIAAA,OAASA,MAAM,KAAQ,SAAS,CAqBhC,MAAO,MAAM,CAAAC,YAAY,CAAGD,MAAM,CAAY,CAACE,GAAG,CAAEC,GAAG,IAAM,CAC3DC,QAAQ,CAAE,CACR,CACEC,EAAE,CAAE,GAAG,CACPC,IAAI,CAAE,+DAA+D,CACrEC,MAAM,CAAE,KAAK,CACbC,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CACrBC,IAAI,CAAE,MACR,CAAC,CACF,CACDC,WAAW,CAAE,KAAK,CAElBC,UAAU,CAAGC,OAAO,EAAK,CACvB,KAAM,CAAAC,UAAmB,CAAAC,aAAA,CAAAA,aAAA,IACpBF,OAAO,MACVR,EAAE,CAAEI,IAAI,CAACO,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CACzBT,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,EACtB,CAEDP,GAAG,CAAEgB,KAAK,GAAM,CACdd,QAAQ,CAAE,CAAC,GAAGc,KAAK,CAACd,QAAQ,CAAEU,UAAU,CAC1C,CAAC,CAAC,CAAC,CACL,CAAC,CAEDK,YAAY,CAAGC,QAAQ,EAAK,CAC1BlB,GAAG,CAAC,CAAES,WAAW,CAAES,QAAS,CAAC,CAAC,CAChC,CAAC,CAEDC,aAAa,CAAEA,CAAA,GAAM,CACnBnB,GAAG,CAAC,CAAEE,QAAQ,CAAE,EAAG,CAAC,CAAC,CACvB,CAAC,CAEDkB,cAAc,CAAGhB,IAAY,EAAK,CAChC,KAAM,CAAAiB,UAAmB,CAAG,CAC1BlB,EAAE,CAAEI,IAAI,CAACO,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CACzBX,IAAI,CACJC,MAAM,CAAE,KAAK,CACbC,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CACrBC,IAAI,CAAE,MACR,CAAC,CAEDR,GAAG,CAAEgB,KAAK,GAAM,CACdd,QAAQ,CAAE,CAAC,GAAGc,KAAK,CAACd,QAAQ,CAAEmB,UAAU,CAAC,CACzCZ,WAAW,CAAE,KACf,CAAC,CAAC,CAAC,CACL,CACF,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}