{"ast":null,"code":"import _objectSpread from\"C:/Users/Sona_M/OneDrive/Desktop/MediChatbot/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{create}from'zustand';import{persist,createJSONStorage}from'zustand/middleware';export const useAuthStore=create()(persist(set=>({user:null,isAuthenticated:false,login:(phoneNumber,name,location)=>{const user={id:Date.now().toString(),phoneNumber,name:name||\"User \".concat(phoneNumber.slice(-4)),location:location||'Unknown'};set({user,isAuthenticated:true});},logout:()=>{set({user:null,isAuthenticated:false});},updateUser:userData=>{set(state=>({user:state.user?_objectSpread(_objectSpread({},state.user),userData):null}));}}),{name:'auth-storage',storage:createJSONStorage(()=>localStorage)}));","map":{"version":3,"names":["create","persist","createJSONStorage","useAuthStore","set","user","isAuthenticated","login","phoneNumber","name","location","id","Date","now","toString","concat","slice","logout","updateUser","userData","state","_objectSpread","storage","localStorage"],"sources":["C:/Users/Sona_M/OneDrive/Desktop/MediChatbot/src/store/authStore.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { persist, createJSONStorage } from 'zustand/middleware';\n\ninterface User {\n  id: string;\n  phoneNumber: string;\n  name?: string;\n  location?: string;\n}\n\ninterface AuthState {\n  user: User | null;\n  isAuthenticated: boolean;\n  login: (phoneNumber: string, name?: string, location?: string) => void;\n  logout: () => void;\n  updateUser: (userData: Partial<User>) => void;\n}\n\nexport const useAuthStore = create<AuthState>()(\n  persist(\n    (set) => ({\n      user: null,\n      isAuthenticated: false,\n      login: (phoneNumber: string, name?: string, location?: string) => {\n        const user: User = {\n          id: Date.now().toString(),\n          phoneNumber,\n          name: name || `User ${phoneNumber.slice(-4)}`,\n          location: location || 'Unknown'\n        };\n        set({ user, isAuthenticated: true });\n      },\n      logout: () => {\n        set({ user: null, isAuthenticated: false });\n      },\n      updateUser: (userData: Partial<User>) => {\n        set((state) => ({\n          user: state.user ? { ...state.user, ...userData } : null\n        }));\n      }\n    }),\n    {\n      name: 'auth-storage',\n      storage: createJSONStorage(() => localStorage),\n    }\n  )\n);\n"],"mappings":"iIAAA,OAASA,MAAM,KAAQ,SAAS,CAChC,OAASC,OAAO,CAAEC,iBAAiB,KAAQ,oBAAoB,CAiB/D,MAAO,MAAM,CAAAC,YAAY,CAAGH,MAAM,CAAY,CAAC,CAC7CC,OAAO,CACJG,GAAG,GAAM,CACRC,IAAI,CAAE,IAAI,CACVC,eAAe,CAAE,KAAK,CACtBC,KAAK,CAAEA,CAACC,WAAmB,CAAEC,IAAa,CAAEC,QAAiB,GAAK,CAChE,KAAM,CAAAL,IAAU,CAAG,CACjBM,EAAE,CAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CACzBN,WAAW,CACXC,IAAI,CAAEA,IAAI,UAAAM,MAAA,CAAYP,WAAW,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAC,CAAE,CAC7CN,QAAQ,CAAEA,QAAQ,EAAI,SACxB,CAAC,CACDN,GAAG,CAAC,CAAEC,IAAI,CAAEC,eAAe,CAAE,IAAK,CAAC,CAAC,CACtC,CAAC,CACDW,MAAM,CAAEA,CAAA,GAAM,CACZb,GAAG,CAAC,CAAEC,IAAI,CAAE,IAAI,CAAEC,eAAe,CAAE,KAAM,CAAC,CAAC,CAC7C,CAAC,CACDY,UAAU,CAAGC,QAAuB,EAAK,CACvCf,GAAG,CAAEgB,KAAK,GAAM,CACdf,IAAI,CAAEe,KAAK,CAACf,IAAI,CAAAgB,aAAA,CAAAA,aAAA,IAAQD,KAAK,CAACf,IAAI,EAAKc,QAAQ,EAAK,IACtD,CAAC,CAAC,CAAC,CACL,CACF,CAAC,CAAC,CACF,CACEV,IAAI,CAAE,cAAc,CACpBa,OAAO,CAAEpB,iBAAiB,CAAC,IAAMqB,YAAY,CAC/C,CACF,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}